Welcome to your Frontend interview task at WebOrigo

With this test we'd like to get a quick insight on your workflow. Please take your time to complete this exercise as good as you can, while keeping in mind that you should send it back today (until midnight, the same day it has been sent out to you). Later on you will not have the opportunity to push your codes, because your GitLab access will be revoked after midnight immediately. To be able to use GitLab you’ll have to register to it with this same email address.

At the end of your task you will be required to commit your codes to your GitLab repository. You’ve been invited to your GitLab repo with the same email address with which you are using Figma right now. If you do not push your codes to GitLab your task will be evaluated as you haven’t completed it.

We’d like you to use the stack(s) that you’ve applied with to our position. Also, you are required to use at least one frontend library. 

On the "Design" frames you can see the designs of your web application created to 3 different viewports. The breakpoints are in pixels in the designs, but you are only allowed to use relative units in your frontend.

You are only required to build what you see on the frontend (no hover effects, animations), but you can implement these ideas in addition to the design for some nice style points.

You can hard-code the data which is provided to you at the ‘Assets’ frame. 

The application is only required to run on a localhost. You might have to show your app via a screensharing on the interview, so do not delete it.

When you are done with coding, push your codes to your GitLab repository. Create a new “dev-[name]” branch for it and also write a nice commit message. If possible upload your codes in different commits, so we will know which part is which.

The working of the app:
This application is a language learning tool. At the “Assets” frame you can see these ‘pairs’ which are connected together. Every English word has a Serbian equivalent and an image that is related to those words. The app shows an image, than under the image writes the English OR the Serbian word for it (this is also a random choice). Under that word there is an input field, in which the user can type in his / her answer, which is the equivalent in the other language of the word that is being shown.

The application is bringing up these pairs in a random order, however when a user answers a question correctly that question won’t be shown. The wrong answers are still remaining in the pool. This selection process goes until there is no more unanswered pairs left, in which case the application resets itself.

The counters under the “Let’s see”’ button are counting the number of good / wrong answers on the left side of the slash “/”. On the right of the slash “/” there is the number of questions - running count.

The “Let’s see” button should also work when the user presses the enter on his / her keyboard.

The result:
Should be a nice, working application. 


To export these images you should click to the ‘Table’ view on the bottom right instead of ‘Code’, when you are on a certain image.